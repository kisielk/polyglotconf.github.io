{
    "workshops": [
        {
            "key": "elasticsearch",
            "active": true,
            "title": "Getting started with Elasticsearch",
            "topics": "Elasticsearch",
            "instructor_name": "Ganesh Swami",
            "instructor_first_name": "Ganesh",
            "slot": "half-day-am",
            "abstract": "<p>This tutorial is an Elasticsearch bootcamp. Elasticsearch is a distributed and scalable search server based on Apache Lucene. You can use Elasticsearch to power your search and analytics in your applications. At the end of the day, you&rsquo;ll:</p>\n\n<p>1. know the most important concepts and terminology of search engines<br />\n2. have a deep understanding of Elasticsearch<br />\n3. apply Elasticsearch to build search applications<br />\n4. analyze and resolve common problems with Elasticsearch</p>\n\n<p>No prior experience with search or Elasticsearch is required. <br />\n</p>",
            "instructor_bio": "<p>10+ years of professional programming experience.</p>\n\n<p>Relevant background: I run a hosted Elasticsearch company silota.com, so I'm familiar with most build and operational aspects of ES.</p>\n\n<p>My most <a href=\"http://www.slideshare.net/silota/building-restful-apis\">recent talk</a> on building APIs at Vancouver Python Day was well received:</p>\n\n<p>I like the challenge of taking complex topics and explaining them to a beginner.<br />\n</p>",
            "syllabus_url" : ""
        },
        {
            "key": "testable-software",
            "active": true,
            "title": "Writing Testable Software",
            "topics": "Testing",
            "instructor_name" : "Clifford Hammerschmidt",
            "instructor_first_name" : "Clifford",
            "slot": "half-day-pm",
            "abstract": "<p>We all know we should test the software we write, and yet many of us still write software that is difficult to test. In this tutorial we'll work through refactoring software to be easier to test and walk through examples of code written with testing in mind. Bring a laptop with either JDK 1.7 or Visual Studio (with C#) installed and expect to write code and tests.</p>",
            "instructor_bio" : "<p>Clifford Hammerschmidt is a software architect with over twenty years experience architecting and writing software. He currently works for Amazon and organizes the Vancouver Software Developers Meetup (<a href=\"http://vandev.org\">vandev.org</a>). He has worked on business applications, anti-spam systems, games, low level concurrency libraries, and high volume application apis handling thousands of requests a second.</p>",
            "syllabus_url" : ""
        },
        {
            "key": "golang",
            "active": true,
            "title": "Go Bootcamp",
            "topics": "Go",
            "instructor_name" : "Kamil Kisiel",
            "instructor_first_name" : "Kamil",
            "slot": "full-day",
            "abstract": "<p>The Go Bootcamp will cover everything you need to get started writing network applications in Go. The first half of the day be spent learning language fundamentals and best practices for Go programming. In the second half participants will use tools available in the Go standard library to build a distributed networked chat.</p>\n\n<p>No prior Go experience is necessary, prior experience with other C-like languages is helpful but not required. Just bring your laptop and an open mind.</p>",
            "instructor_bio" : "<p>Kamil has been programming in Go professionally for two years and is currently working as a freelance developer and consultant. Previously he worked for a biotech startup in ops and software engineering. He has previously given talks at the SGI User Group Conference, Polyglot, and several Vancouver meetup groups.</p>",
            "syllabus_url" : "https://docs.google.com/document/d/1lvf8TfvRXQR9pomgwtXM-1YBhVjCVjcc4MKhT8MOmXs/edit?usp=sharing"
        },
        {
            "key": "reactjs",
            "active": true,
            "title": "Welcome to ReactJS",
            "topics": "Javascript",
            "instructor_name" : "Steven Luscher",
            "instructor_first_name" : "Steven",
            "slot": "full-day",
            "abstract": "<p>React is a Javascript library for building user interfaces that challenges some fundamental assumptions about how user interfaces should be built. In this workshop, you will learn to &quot;think in React,&quot; as you build an interactive, data-driven, client-server web application in the browser.</p>\n\n<p>First, we will learn what's distinctive about the React approach, and how we can benefit from it. Next, we will learn how React components are built, how they operate, how they communicate with each other, and how to test them. Along the way, in pairs or small groups, we will laugh, cry, scream, and cheer, but ultimately build some working software, the React Way.</p>",
            "instructor_bio" : "<p>Steven Luscher builds web and mobile applications using HTML, CSS, Javascript, Ruby, and Objective-C. En-route to becoming a polyglot coder, he made stops along the way to pursue formal education in graphic design, mathematics, and pedagogy; experiences which have served him well in the area of web application development.</p>\n\n<p>In 2013, he delivered a <a href=\"https://github.com/steveluscher/react-supervanjs-2013\">conference talk</a> about React at Super VanJS. He currently works full-time developing a mammoth React-based application using Coffeescript, JSX, Node, and MongoDB.</p>\n\n<p>He does not work for Facebook.</p>",
            "syllabus_url" : "https://github.com/steveluscher/react-polyglot-conf-2014",
            "twitter_handle" : "@steveluscher"
        },
        {
            "key": "docker",
            "active": true,
            "title": "Docker in Depth",
            "topics": "Docker",
            "instructor_name" : "Tavis Rudd",
            "instructor_first_name" : "Tavis",
            "slot": "full-day",
            "abstract": "<p>A full day hands-on dive into docker.</p>",
            "instructor_bio" : "",
            "syllabus_url" : "",
            "twitter_handle" : "@tavisrudd"
        },
        {
            "key": "scala-web",
            "active": true,
            "title": "Building a Truly Modern Web App/API with Scala and Akka",
            "topics": "Scala, Akka",
            "instructor_name" : "Alex Cruise",
            "instructor_first_name" : "Alex",
            "slot": "full-day",
            "abstract": "<p>Web apps and APIs are hugely important parts of modern life, but in many cases, the way they're built hasn't changed in many years. These older tools make scale-out hard, and the resulting systems don't always handle failures gracefully. </p>\n\n<p>Let's take a deep dive into a technology stack that is designed from the ground up for productivity, scalability, correctness and fault tolerance, and see how much can be achieved with surprisingly little code.</p>",
            "instructor_bio" : "<p>I've been building software for a disturbingly long time, and felt like I knew what I was doing until I met Scala and realized how much of the world of computer science I'd been missing.</p>\n\n<p>Over the past four years, I've used Scala for all my serious development work, and have accumulated a tiny bit of wisdom and a lot of humility to go with my battle scars and war stories.</p>",
            "twitter_handle" : "@alexcruise",
            "syllabus_url" : "https://docs.google.com/document/d/14WEBW9MZxQ0bjMG4Z4B0lVtMl3CDE4MjujFOkEj2_WM/edit?usp=sharing",
            "instructor_image" : "http://cluonflux.com/images/1.jpg"
        },
        {
            "key": "haskell",
            "active": true,
            "title": "Real World Programming With Haskell",
            "topics": "Haskell",
            "instructor_name" : "Roman Gonzalez",
            "instructor_first_name" : "Roman",
            "slot": "full-day",
            "abstract": "<p>Participants will tip their toes into the functional programming mindset using Haskell. This is described by many as a mind-bending experience and a challenging one, covering many concepts of the functional paradigm like persistent data structures, tail-recursion, Functors, Monads etc. </p>\n\n<p>We'll explore the lazy behavior of the language, and also how to make functions pure (e.g. enforce avoidance of unintended side effects).</p>\n\n<p>We are going to learn the different tools that Haskell provide for concurrent programming, from Software Transactional Memory, to basic mutable variables.</p>\n\n<p>We are going to learn the basics of Parser Combinators, and we will finish it up with the implementation of a very basic Web app using Scotty, an easy to use Web Framework.</p>",
            "instructor_bio" : "<p>Roman Gonzalez is one of the co-founder of Birdseye Software, he has done many consultancy jobs in the past using Ruby on Rails, and has lead the development team of a local Startup, he has participated in many open source projects using Ruby, Clojure, elisp and Haskell. </p>\n\n<p>He has been using Haskell for the past 6 years, and has given many tutorials on the Vancouver's Haskell Meetup where he is one of the main organizers. He also has given presentations in the Polyglot Meetup and ClojureWest 2013.</p>",
            "syllabus_url" : ""
        },
        {
            "key": "bdd",
            "active": true,
            "title": "Behaviour Driven Development",
            "topics": "BDD",
            "instructor_name" : "Martin Suchanek",
            "instructor_first_name" : "Martin",
            "slot": "half-day-pm",
            "abstract": "<p>Behaviour Driven Development, like any other dogma in software development, is a complicated beast. It's proselytized by the zealots, and abdicated by the trolls. The practical reality is somewhere in between. And the best we can do is arm ourselves with understanding.</p><p>BDD finds itself at the intersection of a lot of different disciplines. The majority of those are non-technical. This workshop will focus on the technical aspects. Having a solid understanding of these will allow practicioners to focus instead on the really important parts, instead of getting caught up in implementation details.</p>",
            "instructor_bio" : "<p>I'm a multi-disciplined software developer, hacking away at technology, organization, and product since the first dot com boom (and bust). For some uncanny reason I've found myself wearing all the possible hats. I've worked in companies from 1 to 300 in size, from positions of sole proprietor, employee, advisor, and external contractor.</p><p>I have been practicing BDD in depth for the last five years, at three different organizations.</p>",
            "syllabus_url" : "https://gist.github.com/mrtns/10081393",
            "twitter_handle" : "@mrtn_su"
        },
        {
            "key": "ios-ui",
            "active": true,
            "title": "Auto Layout and Storyboards on iOS",
            "topics": "iOS",
            "instructor_name" : "Allen Pike",
            "instructor_first_name" : "Allen",
            "slot": "full-day",
            "abstract": "<p>Storyboards and Auto Layout are the two primary tools for laying out user interfaces on iOS. With the new Interface Builder functionality in Xcode 5.1 and the persistent rumours of a larger iPhone on the horizon, now is the time to level up your Storyboard and Auto Layout skills and get rid of your app's old manual layout code.</p><p>Our morning will focus on Storyboards, building out a simple Twitter client using Xcode and Interface Builder. Then we'll dive into code, with custom Segues and other advanced issues around Storyboards, paired with a more advanced coding exercise.</p><p>The afternoon will go deep into Auto Layout, starting with the theory as a refresher before going into building Auto Layouts in Xcode, highlighting the new Auto Layout tools in Xcode 5.1. After an exercise in Interface Builder, we'll dig into code, building and debugging more advanced Auto Layouts, finishing with an Auto Layout torture test exercise.</p>",
            "instructor_bio" : "<p>Steamclock is one of the top iOS development studios in Canada, with a team of mobile developers focused on great UI and UX, and are organizers of the VanCocoa speaker series on iOS and Mac development.</p><p>Allen Pike and Nigel Brooke are seasoned iOS developers who have taught at SFU and University of Calgary respectively. Prior to founding Steamclock, Allen was a Software Engineer at Apple. You can see an example of Allen speaking on iOS and JavaScript development at JSConf in Berlin <a href=\"https://www.youtube.com/watch?v=5LUkHss6CAw\">here.</a></p><p>Last year at Polyglot Steamclock put on a less in-depth day-long iOS tutorial, which was well received.</p>",
            "syllabus_url" : "",
            "twitter_handle" : "@apike"
        },
        {
            "key": "emberjs",
            "active": true,
            "title": "Intro to EmberJS",
            "topics": "Javascript, EmberJS",
            "instructor_name" : "Dave Laird",
            "instructor_first_name" : "Dave",
            "slot": "half-day-am",
            "abstract": "<p>NBCNews.com, Bustle.com, discourse.org, and companies like Square, Yahoo, Groupon, and zendesk (to name just a few) use EmberJS apps in production. Ember's approach of convention over configuration makes it easy to build complex JavaScript apps with a sensible, maintainable, and extensible architecture.</p> <p>During this three hour intro to EmberJS we will build an Ember app. You will leave the tutorial with a good start towards building your own ember app.</p> <p>Building pieces of <a href=\"http://ember-weather.herokuapp.com/locations/vancouver-canada\">http://ember-weather.herokuapp.com/locations/vancouver-canada</a></p>",
            "instructor_bio" : "<p>We did <a href=\"http://www.meetup.com/seattlejs/events/151743492/\">this workshop</a> for the Seattle JS meetup</p><p>I'm a front end developer at urbanspoon.com and the co-ordinator of the Seattle Ember Meetup.</p><p><a href=\"https://github.com/kiwiupover\">github.com/kiwiupover</a></p>",
            "syllabus_url" : ""
        },
        {
            "key": "containers",
            "active": false,
            "title": "Containers and PaaS: Revolutionizing Cloud Application Development",
            "topics": "Containers, PaaS, Cloud application development",
            "instructor_name" : "John Wetherill",
            "instructor_first_name" : "John",
            "slot": "full-day",
            "abstract": "<p>Abstract</p><ul><li>Audience level: Beginner to Intermediate</li><li>Category: Cloud Development/li><li>Appropriate for: Cloud application developers, deployers, testers, maintainers</li></ul><p>Platform-as-a-Service (PaaS) is revolutionizing cloud application development, providing a fully-equipped foundation that allows developers to rapidly build, deploy, test, debug, monitor, and scale cloud applications. Linux Containers are a fundamental building block of many modern PaaS offerings, providing all the advantages of conventional virtual machines, but extremely lightweight and portable. The combination of these two technologies, PaaS and containers, provides developers almost everything they need to rapidly build and deploy secure, scalable and robust cloud applications. </p><p>Learn how to employ a Platform as a Service, or PaaS, to rapidly build and deploy secure, scalable and robust cloud applications. This all-day workshop will alternate between lecture and hands-on labs, and in keeping with the polyglot theme of this conference, will cover a wide range of modern programming languages including Java, Ruby, Python, PHP, Clojure, JavaScript and Perl. There will be an in-depth look and hands-on approach working with both technologies: PaaS and containers. After an introduction to cloud concepts and modern cloud development practices, we'll roll up our sleeves and dive deep into essential concepts and tools, including:</p><ul><li>Hands-on with a Platform-as-a-Service (PaaS)</li><li>Lightweight containers and application isolation</li><li>Hands-on managing containers with Docker</li><li>Design/architecture considerations for cloud apps</li><li>Hands-on building and deploying cloud applications</li><li>Hands-on cloud app migration to any infrastructure; public, private, or hybrid</li><li>Practices for securing and scaling cloud apps</li><li>Hands-on monitoring, debugging, and logging in the cloud</li></ul><p>This workshop is intended for developers of any language who are currently building or are interested in deploying web apps using twelve-factor methodology on EC2, OpenStack, Rackspace, VSphere, etc. (public, private, or hybrid clouds).</p><p>Prerequisites</p><ul><li>Familiarity with one or more modern programming language(s)</li><li>Some understanding of conventional web application design</li><li>Bring a laptop with a web browser installed (or be willing to look over another attendee's shoulder)</li></ul>",
            "instructor_bio" : "<p>John Wetherill, ActiveState's Developer Evangelist, is originally from Canada. John has spent much of his career designing and building software at several startups, at Sun Microsystems, NeXT Inc., and most recently in the smart grid and energy space. His biggest passion is for developer tools, or more generally any tool, language, process, or system that improves developer productivity and quality of life. Without question, Stackato is one such tool and the reason why he is at ActiveState. No stranger to technology evangelism, John spent several years in the late 1990's on Sun's Technology Evangelism Team spreading the Java Gospel across the globe and focusing on the prolific number of Java technologies. John has returned to his roots, as Developer Evangelist at ActiveState, a Canadian company, albeit, he works remotely from Santa Cruz. He has presented sessions and workshops on PaaS, containers and deploying hybrid cloud application using various languages, at events such as PyCon, QCon, LinuxCon and others including CloudConnect.</p>",
            "syllabus_url" : ""
        }
    ]
}
